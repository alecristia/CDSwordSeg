#!/bin/sh
# Alex Cristia alecristia@gmail.com 2015-06-25
KEYNAME=$1
CHAFOLDER=$2
RESFOLDER=$3

#########
#Variables that will probably not change
PERLSCRIPTS="fromCHAtoSND/scripts"
#########


sumtxt="$RESFOLDER${KEYNAME}-demographics.txt"	#notice that this includes the information from the input CHAFOLDER
inclines="$RESFOLDER${KEYNAME}-includedlines.txt"
ortho="$RESFOLDER${KEYNAME}-ortholines.txt"

rm -r $RESFOLDER
mkdir $RESFOLDER

echo "cleaning"
#chomp CHA files to leave only text
#TODO add replacements for common spelling etc errors

echo "file chidata" > $sumtxt
for j in $CHAFOLDER*.cha
   do
	chi=$(grep '@ID' "$j" | grep 'CHI' | sed s/.*CHI\|//g | sed s/male.*/male/g)
 	echo "$j" $chi >> $sumtxt

	grep '*' "$j" | grep -E 'MOT|FAT' | sed 's/^....:.//g' | sed "s/\_/ /g" | tr -d '\"' | tr -d '\"' | tr -d '\/' | sed 's/\+/ /g' | tr -d '\.' |  tr -d '\?' | tr -d '!' | tr -d ';' | tr -d '\<' | tr -d '\>' | tr -d ','  | tr -d '(' | tr -d ')' | tr -d ':' | sed 's/"[0-9]* [0-9]*"//g' | sed 's/&[^ ]*//g' | sed 's/\[.*\]//g' | sed 's/xxx//g' | sed 's/www//g' | sed 's/XXX//g' | sed 's/@o//g' | sed 's/@f//g' | sed 's/@q//g' | sed 's/@u//g' | sed 's/@c//g' | sed "s/\' / /g"  | sed 's/  / /g' | awk '{gsub("\\\"",""); print}' > tmp.txt
	
#next set of replacements for unusual spellings
	sed 's/allgone/all gone/g' tmp.txt | sed 's/whaddaya/what do you/g' | sed 's/whadda/what do/g' | sed 's/haveto/have to/g' | sed 's/hasto/has to/g' | sed 's/outof/out of/g' | sed 's/lotsof/lots of/g' | sed 's/lotta/lots of/g' | sed 's/alotof/a lot of/g' | sed "s/wha\'s/what's/g" | sed "s/this\'s/this is/g" | sed 's/chya/ you/g' | sed 's/tcha/t you/g' | sed 's/chyou/ you/g' | sed "s/dont you/don\'t you/g" | sed 's/wanta/wanna/g'  | sed "s/whats / what\'s /g" | sed "s/'re/ are/g" | sed "s/klenex/kleenex/g" | sed 's/yogourt/yogurt/g' | sed 's/weee*/wee/g' | sed 's/oooo*/oh/g' | sed 's/ oo / oh /g' | sed 's/ohh/oh/g' | sed "s/ im / I\'m /g" >> "$ortho"
   done

cd $PERLSCRIPTS
echo "convert-to-unicode-9mos.pl"
perl convert-to-unicode-9mos.pl $KEYNAME $ortho $RESFOLDER
tr -d '/' < $RESFOLDER${KEYNAME}-ADD.txt |sed '/^$/d' | sort | uniq -c | awk '{print $1" "$2}' | sort -n -r > $RESFOLDER${KEYNAME}-ADD-sorted.txt
rm $RESFOLDER${KEYNAME}-ADD.txt

echo "convert-to-english-9mos.pl"
perl convert-to-english-9mos.pl $KEYNAME $RESFOLDER 
echo "convert-to-english-9mos.pl"
perl convert-to-english-syls-9mos.pl $KEYNAME $RESFOLDER

#And back to my code
echo "removing blank lines"
for j in $RESFOLDER${KEYNAME}*.txt; do
   sed '/^$/d' "$j" | sed '/^ $/d' > tmp.tmp
   mv tmp.tmp "$j"
done
echo "creating all versions"
sed 's/ /12/g' $RESFOLDER${KEYNAME}-text-klatt-syls.txt | sed 's/\//2/g' | sed 's/./& /g' | sed 's/1/;eword/g' | sed 's/2/;esyll/g' > $RESFOLDER${KEYNAME}-text-klatt-syls-tags.txt
sed 's/;esyll//g'  $RESFOLDER$KEYNAME-text-klatt-syls-tags.txt | sed 's/ //g' | sed 's/;eword/ /g' > $RESFOLDER${KEYNAME}-gold.txt
