#Converting trs files to CHILDES-like format
#Alex Cristia alecristia@gmail.com 2015-11 comparison
#this version generates three versions of the corpus: adult directed only, child directed only, and directed to the key child only

#########VARIABLES
#*****VARIABLES TO CHANGE*********#
TRSFOLDER="/fhgfs/bootphon/scratch/acristia/data/WinnipegLENA/trs/" #must exist and contain trs files
#TRSFOLDER="/fhgfs/bootphon/scratch/acristia/data/WinnipegLENA/test/" #must exist and contain trs files
CHAFOLDER="/fhgfs/bootphon/scratch/acristia/data/WinnipegLENA/cha/" #will be created and output cha files will be stored there
#*********************************#
#NOTE: there are lots of annotation below, hopefully explanatory

mkdir $CHAFOLDER


#Step 1: generate a file that contains only sentences we want
for j in $TRSFOLDER*.trs; do
	k="${j%????}"
	grep "|" "$j" |
	sed 's/CRY//g' | sed 's/SIL//g' | sed 's/BBL//g' | sed 's/VOC//g' | sed 's/VFX//g' |
	tr -s ' ' | grep -v '^ |' |  grep -v '^|' |
	sed -r 's/(\|[BRE]C\|[0-9]*\|[0-9]*\|[0-9]*\|[A-Z/]*\|[A-Z]*\|[A-Z]*)(|.\|.\|.*\|.\|$)/ \2/g' |
	 tr '.' '\n' |
	grep -v '^[0-9]' |
	sed 's/&lt;/ /g' |  sed 's/&gt;/ /g' | sed "s/i'i/i/g" | tr -d '\r' |
	sed -r 's/([a-z])(\|)/\1 \2/g' |
	grep -v ' |T|' | grep -v ' |C|' | grep -v ' |O|' | grep -v ' |U|' |
	grep -v '|I[0-9]' | grep -v '|C[0-9]'   > ${TRSFOLDER}temp.tmp


#
#This means:
#grep "|" $j | = focus on lines which contain | codes, because they may contain transcriptions
#grep -v 'CRY' |... sed 's/VFX//g' | = remove  LENA labels  (speech-like VOC, silence SIL, babble BBL, fixed VFX)
#tr -s ' ' | grep -v '^ |' | grep -v '^|' | = remove every line that haven't been transcribed, since they start with |
#sed -r 's/(\|[BRE]C\|[0-9]*\|[0-9]*\|[0-9]*\|[A-Z/]*\|[A-Z]*\|[A-Z]*)(|.\|.\|.*\|.\|$)/\2/g' | = remove the LENA codes for interaction if any
#tr '.' '\n' = break down sentences coded together in the same turn with a long intervening silence (.) into two separate lines
#grep -v '^[0-9]' = remove sentences that start with numbers because those are overlaps
#sed 's/&lt;//g' |  sed 's/&gt;//g' | sed "s/i'i/i/g"  = remove ugly characters
#grep -v ' |T|' | = remove utterances by the target child
#grep -v ' |C|' | = remove utterances by an uncertain child
#grep -v ' |O|' | = remove utterances by another child
#grep -v ' |U|' | = remove utterances by an uncertain person
#grep -v '|I[0-9]' | = remove utterances that are initiated and cut by an overlap...
#grep -v '|C[0-9]' = ... as well as their continuations


# In the next phase, we create the line selections
#VERSION 1: to analyze only the adult-directed speech		!#!!!
	grep -e ' |.|A' < "${TRSFOLDER}temp.tmp" > "${k}_ADS.txt"

#VERSION 2: to analyze only the TARGET CHILD child-directed speech		!#!!!
	grep  -e ' |.|T' < "${TRSFOLDER}temp.tmp" > "${k}_CDS.txt"

#another version, just to check against Melanie's pipeline
	grep  -e ' |.|T' -e ' |.|O' -e ' |.|C' < "${TRSFOLDER}temp.tmp" > "${k}_KDS.txt"

#create a version reflecting segments glued together by humans
#sed -r 's/I\|.\|/toglue/' | awk '{if($NF~"toglue"){mem=mem $0 " "}else{print mem $0; mem="" }}END{print mem}' = trick to glue together the lines that are considered continuations (without overlap)
	sed -r 's/I\|.\|/toglue/' < "${TRSFOLDER}temp.tmp" | awk '{if($NF~"toglue"){mem=mem $0 " "}else{print mem $0; mem="" }}END{print mem}' | sed "s/toglue//g" > "${TRSFOLDER}temp_glued.tmp"

#VERSION 1: to analyze only the adult-directed speech - human style segmentation		!#!!!
	grep -e ' |.|A' < "${TRSFOLDER}temp_glued.tmp" > "${k}_ADS_humanseg.txt"

#VERSION 2: to analyze only the TARGET CHILD child-directed speech	-human style segmentation	!#!!!
	grep  -e ' |.|T' < "${TRSFOLDER}temp_glued.tmp" > "${k}_CDS_humanseg.txt"

#another version, just to check against Melanie's pipeline
	grep  -e ' |.|T' -e ' |.|O' -e ' |.|C' < "${TRSFOLDER}temp_glued.tmp" > "${k}_KDS_humanseg.txt"

	rm ${TRSFOLDER}*.tmp
done



#Step 2: Fake CHILDES format lines
for j in $TRSFOLDER*.txt; do
	k="${j%???}"cha
	sed '/ |M/ s/[a-z]*/\*FAT: &/' "$j" |
            sed '/ |F/ s/[a-z]*/\*MOT: &/' |
            sed '/ |O/ s/[a-z]*/\*SIB: &/' |
            sed 's/|[A-Z][A-Z]/ /g' |
            sed 's/|./ /g' |
            tr -d '|' | tr -s ' ' > "$k"
	nl=`wc -l "$j" | cut -f1 -d' '`
	nw=`wc -w "$j" | cut -f1 -d' '`
	echo "$j" "$nl" "$nw" >> ${CHAFOLDER}summary.txt
done

#This means:
#sed '/ \|M/ s/[a-z]*/\*FAT: &/' $j | = use CHILDES code for father (FAT) for all Male adult LENA utterances
#sed '/ \|F/ s/[a-z]*/\*MOT: &/' | = use CHILDES code for mother (MOT) for all Female adult LENA utterances
#sed '/ \|O/ s/[a-z]*/\*SIB: &/' | =add SIBLING at the beginning (same for all "other child" utterances
#sed 's/\|[^|]*\|//g' =remove the old codes of who spoke to whom & how

mkdir ${CHAFOLDER}WL_ADS_HS
mv $TRSFOLDER*ADS_humanseg.cha ${CHAFOLDER}WL_ADS_HS

mkdir ${CHAFOLDER}WL_ADS_LS
mv $TRSFOLDER*ADS.cha ${CHAFOLDER}WL_ADS_LS

mkdir ${CHAFOLDER}WL_CDS_HS
mv $TRSFOLDER*CDS_humanseg.cha ${CHAFOLDER}WL_CDS_HS

mkdir ${CHAFOLDER}WL_CDS_LS
mv $TRSFOLDER*CDS.cha ${CHAFOLDER}WL_CDS_LS
